appenders:
  stdout:
    kind: console
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.6f)} [{f}:{L}] {h({l})} {M}:{m}{n}"
    filters:
      - kind: threshold
        level: info
  info_file:
    kind: file
    path: "./log/info.log"
    filters:
      - kind: threshold
        level: info
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.6f)} [{f}:{L}] {h({l}):<5.5} {M}:{m}{n}" #"[{d(%Y-%m-%dT%H:%M:%S%.6f)} {h({l}):<5.5} {M}] {m}{n}"
  error_file:
    kind: file
    path: "./log/error.log"
    filters:
      - kind: threshold
        level: error
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.6f)} [{f}:{L}] {h({l}):<5.5} {M}:{m}{n}" #"[{d(%Y-%m-%dT%H:%M:%S%.6f)} {h({l}):<5.5} {M}] {m}{n}"
  rolling_file:
    kind: rolling_file
    path: "./log/rolling_file.log"
    encoder:
      pattern: "{d(%Y-%m-%d %H:%M:%S%.6f)} [{f}:{L}] {h({l}):<5.5} {M}:{m}{n}"
    policy:
      trigger:
        kind: time
        interval: 1 hour
      roller:
        kind: fixed_window
        pattern: "./log/old-rolling_file-{}.log"
        base: 0
        count: 2
root:
  level: info
  appenders:
    - stdout
    - info_file
    - error_file
    - rolling_file